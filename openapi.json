{
  "openapi": "3.0.0",
  "info": {
    "title": "Employee and Branch Management API Documentation",
    "version": "1.0.0",
    "description": "This is the API documentation for Employee and Branch Management application."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the branch id"
          },
          "name": {
            "type": "string",
            "description": "the branch name"
          },
          "address": {
            "type": "string",
            "description": "the branch address"
          },
          "phone": {
            "type": "string",
            "description": "the branch's phone"
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the employee id"
          },
          "name": {
            "type": "string",
            "description": "the employee name"
          },
          "position": {
            "type": "string",
            "description": "the employee position"
          },
          "department": {
            "type": "string",
            "description": "the employee department"
          },
          "email": {
            "type": "string",
            "description": "the employee email"
          },
          "phone": {
            "type": "string",
            "description": "the employee phone"
          },
          "branchId": {
            "type": "string",
            "description": "the employee's branchId"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/branches": {
      "get": {
        "summary": "Get all branches",
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "All branches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new branch",
        "tags": [
          "Branch"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "the new branch"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/branches/{id}": {
      "get": {
        "summary": "Get an existing branch",
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "ID of the branch to be found"
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted branch",
            "content": {
              "application/json": {
                "type": "object",
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "404": {
            "description": "No branch found with the specified id"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update an existing branch",
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the branch to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated branch"
          },
          "404": {
            "description": "No branch found with the specified id"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an existing branch",
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the branch to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successfully"
          },
          "404": {
            "description": "No branch found with the specified id"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/employees": {
      "get": {
        "summary": "Get all employees",
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "All employess  matching the criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new employee",
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "the new employee"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/employees/{id}": {
      "get": {
        "summary": "Get an existing employee",
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "ID of the employee to be found"
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted employee",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "employees": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No branch found with the specified id"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update an existing employee",
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the employee to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated employee"
          },
          "404": {
            "description": "No employee found with the specified id"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an existing employee",
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the employee to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successfully"
          },
          "404": {
            "description": "No employee found with the specified id"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Get health status of the application",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "The application's status indicated by a message \"Server is healthy\""
          }
        }
      }
    }
  },
  "tags": []
}